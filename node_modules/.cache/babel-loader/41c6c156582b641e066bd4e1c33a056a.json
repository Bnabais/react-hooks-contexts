{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/brunonabais/Present Technologies/my-app/src/components/header-color/HeaderColor.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from 'react';\nimport PropTypes from 'prop-types'; // Hooks\n\nimport { useHeaderContext } from '../../hooks/HeaderContext';\nimport useMatchingColor from '../../hooks/useMatchingColor';\nimport useColorCounter from '../../hooks/useColorCounter'; // Utils\n\nimport { COLORS } from '../../utils/colors';\nimport Circle from '../../media/Circle'; // Styles\n\nimport './HeaderColor.css';\n\nfunction HeaderColor({\n  color,\n  forwardedRef\n}) {\n  _s();\n\n  const {\n    setHeaderColor\n  } = useHeaderContext();\n  const {\n    setColorCounter,\n    colorCount\n  } = useColorCounter();\n  const matchingColor = useMatchingColor(color);\n  const handleClick = useCallback(() => {\n    setHeaderColor(COLORS[matchingColor]);\n    setColorCounter();\n  }, [matchingColor, setHeaderColor, setColorCounter]);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    ref: forwardedRef,\n    className: 'color-button',\n    onClick: handleClick,\n    children: [/*#__PURE__*/_jsxDEV(Circle, {\n      fill: COLORS[matchingColor]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: 'color-count',\n      children: colorCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(HeaderColor, \"sC8pgjPi2Bi+U7l9MgZpJXsDQhs=\", false, function () {\n  return [useHeaderContext, useColorCounter, useMatchingColor];\n});\n\n_c = HeaderColor;\nHeaderColor.propTypes = {\n  color: PropTypes.string,\n  forwardedRef: PropTypes.object\n};\nexport default HeaderColor;\n\nvar _c;\n\n$RefreshReg$(_c, \"HeaderColor\");","map":{"version":3,"sources":["/Users/brunonabais/Present Technologies/my-app/src/components/header-color/HeaderColor.js"],"names":["React","useCallback","PropTypes","useHeaderContext","useMatchingColor","useColorCounter","COLORS","Circle","HeaderColor","color","forwardedRef","setHeaderColor","setColorCounter","colorCount","matchingColor","handleClick","propTypes","string","object"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,SAASC,gBAAT,QAAiC,2BAAjC;AACA,OAAOC,gBAAP,MAA6B,8BAA7B;AACA,OAAOC,eAAP,MAA4B,6BAA5B,C,CAEA;;AACA,SAAQC,MAAR,QAAqB,oBAArB;AACA,OAAOC,MAAP,MAAmB,oBAAnB,C,CAEA;;AACA,OAAO,mBAAP;;AAEA,SAASC,WAAT,CAAqB;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAArB,EAA8C;AAAA;;AAC1C,QAAM;AAAEC,IAAAA;AAAF,MAAqBR,gBAAgB,EAA3C;AACA,QAAM;AAAES,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,MAAkCR,eAAe,EAAvD;AAEA,QAAMS,aAAa,GAAGV,gBAAgB,CAACK,KAAD,CAAtC;AACA,QAAMM,WAAW,GAAGd,WAAW,CAAC,MAAM;AAClCU,IAAAA,cAAc,CAACL,MAAM,CAACQ,aAAD,CAAP,CAAd;AACAF,IAAAA,eAAe;AAClB,GAH8B,EAG5B,CAACE,aAAD,EAAgBH,cAAhB,EAAgCC,eAAhC,CAH4B,CAA/B;AAKA,sBACI;AACI,IAAA,GAAG,EAAEF,YADT;AAEI,IAAA,SAAS,EAAE,cAFf;AAGI,IAAA,OAAO,EAAEK,WAHb;AAAA,4BAII,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAET,MAAM,CAACQ,aAAD;AAApB;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAG,MAAA,SAAS,EAAE,aAAd;AAAA,gBAA8BD;AAA9B;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GAnBQL,W;UACsBL,gB,EACaE,e,EAElBD,gB;;;KAJjBI,W;AAqBTA,WAAW,CAACQ,SAAZ,GAAwB;AACpBP,EAAAA,KAAK,EAAEP,SAAS,CAACe,MADG;AAEpBP,EAAAA,YAAY,EAAER,SAAS,CAACgB;AAFJ,CAAxB;AAKA,eAAeV,WAAf","sourcesContent":["import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\n\n// Hooks\nimport { useHeaderContext } from '../../hooks/HeaderContext';\nimport useMatchingColor from '../../hooks/useMatchingColor';\nimport useColorCounter from '../../hooks/useColorCounter';\n\n// Utils\nimport {COLORS} from '../../utils/colors';\nimport Circle from '../../media/Circle';\n\n// Styles\nimport './HeaderColor.css';\n\nfunction HeaderColor({ color, forwardedRef }) {\n    const { setHeaderColor } = useHeaderContext();\n    const { setColorCounter, colorCount } = useColorCounter();\n\n    const matchingColor = useMatchingColor(color);\n    const handleClick = useCallback(() => {\n        setHeaderColor(COLORS[matchingColor]);\n        setColorCounter();\n    }, [matchingColor, setHeaderColor, setColorCounter]);\n\n    return (\n        <button\n            ref={forwardedRef}\n            className={'color-button'}\n            onClick={handleClick}>\n            <Circle fill={COLORS[matchingColor]}/>\n            <p className={'color-count'}>{colorCount}</p>\n        </button>\n    )\n}\n\nHeaderColor.propTypes = {\n    color: PropTypes.string,\n    forwardedRef: PropTypes.object\n};\n\nexport default HeaderColor;\n"]},"metadata":{},"sourceType":"module"}