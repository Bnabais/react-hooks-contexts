{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/brunonabais/Present Technologies/react-hooks-contexts/src/hooks/HeaderContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useMemo, useCallback, createContext, useContext, useReducer } from 'react';\nimport { COLORS } from '../utils/colors';\nconst HeaderContext = /*#__PURE__*/createContext();\n\nconst reducer = (state, action) => {\n  if (action.type === 'COLOR') {\n    return action.payload;\n  }\n\n  return state;\n};\n\nexport function HeaderProvider(props) {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, COLORS.grey);\n  const setHeaderColor = useCallback(color => {\n    dispatch({\n      type: 'COLOR',\n      payload: color\n    });\n  }, []);\n  const value = useMemo(() => ({\n    setHeaderColor,\n    headerColorState: state\n  }), [setHeaderColor, state]);\n  return /*#__PURE__*/_jsxDEV(HeaderContext.Provider, {\n    value: value,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 12\n  }, this);\n}\n/**\n * Uses the context provided by the `MiniCartContext`.\n *\n * @returns {HeaderContextValue} - The provided context values.\n */\n\n_s(HeaderProvider, \"vc2+vEJwoVjJYHoC1rem91zNxHE=\");\n\n_c = HeaderProvider;\nexport function useHeaderContext() {\n  _s2();\n\n  return useContext(HeaderContext);\n}\n\n_s2(useHeaderContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport default HeaderContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"HeaderProvider\");","map":{"version":3,"sources":["/Users/brunonabais/Present Technologies/react-hooks-contexts/src/hooks/HeaderContext.js"],"names":["React","useMemo","useCallback","createContext","useContext","useReducer","COLORS","HeaderContext","reducer","state","action","type","payload","HeaderProvider","props","dispatch","grey","setHeaderColor","color","value","headerColorState","useHeaderContext"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IACIC,OADJ,EAEIC,WAFJ,EAGIC,aAHJ,EAIIC,UAJJ,EAKIC,UALJ,QAMO,OANP;AAOA,SAAQC,MAAR,QAAqB,iBAArB;AAEA,MAAMC,aAAa,gBAAGJ,aAAa,EAAnC;;AAEA,MAAMK,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/B,MAAIA,MAAM,CAACC,IAAP,KAAgB,OAApB,EAA6B;AACzB,WAAOD,MAAM,CAACE,OAAd;AACH;;AACD,SAAOH,KAAP;AACH,CALD;;AAOA,OAAO,SAASI,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAClC,QAAM,CAACL,KAAD,EAAQM,QAAR,IAAoBV,UAAU,CAACG,OAAD,EAAUF,MAAM,CAACU,IAAjB,CAApC;AAEA,QAAMC,cAAc,GAAGf,WAAW,CAAEgB,KAAD,IAAW;AAC1CH,IAAAA,QAAQ,CAAC;AAACJ,MAAAA,IAAI,EAAE,OAAP;AAAgBC,MAAAA,OAAO,EAAEM;AAAzB,KAAD,CAAR;AACH,GAFiC,EAE/B,EAF+B,CAAlC;AAIA,QAAMC,KAAK,GAAGlB,OAAO,CACjB,OAAO;AACHgB,IAAAA,cADG;AAEHG,IAAAA,gBAAgB,EAAEX;AAFf,GAAP,CADiB,EAKjB,CAACQ,cAAD,EAAiBR,KAAjB,CALiB,CAArB;AAQA,sBAAO,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAEU,KAA/B;AAAA,OAA0CL;AAA1C;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;AAED;AACA;AACA;AACA;AACA;;GAtBgBD,c;;KAAAA,c;AAuBhB,OAAO,SAASQ,gBAAT,GAA4B;AAAA;;AAC/B,SAAOjB,UAAU,CAACG,aAAD,CAAjB;AACH;;IAFec,gB;;AAIhB,eAAed,aAAf","sourcesContent":["import React, {\n    useMemo,\n    useCallback,\n    createContext,\n    useContext,\n    useReducer\n} from 'react';\nimport {COLORS} from '../utils/colors';\n\nconst HeaderContext = createContext();\n\nconst reducer = (state, action) => {\n    if (action.type === 'COLOR') {\n        return action.payload;\n    }\n    return state;\n};\n\nexport function HeaderProvider(props) {\n    const [state, dispatch] = useReducer(reducer, COLORS.grey);\n\n    const setHeaderColor = useCallback((color) => {\n        dispatch({type: 'COLOR', payload: color});\n    }, []);\n\n    const value = useMemo(\n        () => ({\n            setHeaderColor,\n            headerColorState: state\n        }),\n        [setHeaderColor, state]\n    );\n\n    return <HeaderContext.Provider value={value} {...props} />;\n}\n\n/**\n * Uses the context provided by the `MiniCartContext`.\n *\n * @returns {HeaderContextValue} - The provided context values.\n */\nexport function useHeaderContext() {\n    return useContext(HeaderContext);\n}\n\nexport default HeaderContext;\n"]},"metadata":{},"sourceType":"module"}