{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/brunonabais/Present Technologies/my-app/src/components/page-layout/PageLayout.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useCallback, useMemo } from 'react'; // Components\n\nimport HeaderColor from '../header-color'; // Hooks\n\nimport usePrevious from '../../hooks/usePrevious'; // Utils\n\nimport { COLORS } from '../../utils/colors'; // Styles\n\nimport './PageLayout.css';\n\nfunction PageLayout() {\n  _s();\n\n  const [actualColor, setActualColor] = useState(null);\n  const previousColor = usePrevious(actualColor);\n  const previousSelectedColor = useMemo(() => `Previous Color: ${previousColor === null || previousColor === void 0 ? void 0 : previousColor.toUpperCase()}`, [previousColor]);\n  const actualSelectedColor = useMemo(() => `Actual Color: ${actualColor === null || actualColor === void 0 ? void 0 : actualColor.toUpperCase()}`, [actualColor]);\n  const handleClick = useCallback(color => {\n    setActualColor(color);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'page-layout',\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: 'page-layout-section',\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Change Header Color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'page-layout-colors-wrapper',\n        children: Object.keys(COLORS).map((color, index) => /*#__PURE__*/_jsxDEV(Fragment, {\n          children: /*#__PURE__*/_jsxDEV(HeaderColor, {\n            onClick: handleClick,\n            color: color\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 33\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'page-layout-color-wrapper',\n        children: [previousColor && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: 'page-layout-color-info',\n          children: previousSelectedColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 29\n        }, this), actualColor && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: 'page-layout-color-info',\n          children: actualSelectedColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PageLayout, \"H0n/pzKPUZ+orwjIdM0i1UBiDco=\", false, function () {\n  return [usePrevious];\n});\n\n_c = PageLayout;\nexport default PageLayout;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageLayout\");","map":{"version":3,"sources":["/Users/brunonabais/Present Technologies/my-app/src/components/page-layout/PageLayout.js"],"names":["React","Fragment","useState","useCallback","useMemo","HeaderColor","usePrevious","COLORS","PageLayout","actualColor","setActualColor","previousColor","previousSelectedColor","toUpperCase","actualSelectedColor","handleClick","color","Object","keys","map","index"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,WAApC,EAAiDC,OAAjD,QAAgE,OAAhE,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,iBAAxB,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,yBAAxB,C,CAEA;;AACA,SAASC,MAAT,QAAuB,oBAAvB,C,CAEA;;AACA,OAAO,kBAAP;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AAClB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,IAAD,CAA9C;AAEA,QAAMS,aAAa,GAAGL,WAAW,CAACG,WAAD,CAAjC;AAEA,QAAMG,qBAAqB,GAAGR,OAAO,CAAC,MACjC,mBAAkBO,aAAnB,aAAmBA,aAAnB,uBAAmBA,aAAa,CAAEE,WAAf,EAA6B,EADf,EAElC,CAACF,aAAD,CAFkC,CAArC;AAIA,QAAMG,mBAAmB,GAAGV,OAAO,CAAC,MAC/B,iBAAgBK,WAAjB,aAAiBA,WAAjB,uBAAiBA,WAAW,CAAEI,WAAb,EAA2B,EADb,EAEhC,CAACJ,WAAD,CAFgC,CAAnC;AAIA,QAAMM,WAAW,GAAGZ,WAAW,CAACa,KAAK,IAAI;AACrCN,IAAAA,cAAc,CAACM,KAAD,CAAd;AACH,GAF8B,EAE5B,EAF4B,CAA/B;AAIA,sBACI;AAAK,IAAA,SAAS,EAAE,aAAhB;AAAA,2BACI;AAAS,MAAA,SAAS,EAAE,qBAApB;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEQ;AAAK,QAAA,SAAS,EAAE,4BAAhB;AAAA,kBACMC,MAAM,CAACC,IAAP,CAAYX,MAAZ,EAAoBY,GAApB,CAAwB,CAACH,KAAD,EAAQI,KAAR,kBACtB,QAAC,QAAD;AAAA,iCACI,QAAC,WAAD;AAAa,YAAA,OAAO,EAAEL,WAAtB;AAAmC,YAAA,KAAK,EAAEC;AAA1C;AAAA;AAAA;AAAA;AAAA;AADJ,WAAeI,KAAf;AAAA;AAAA;AAAA;AAAA,gBADF;AADN;AAAA;AAAA;AAAA;AAAA,cAFR,eASQ;AAAK,QAAA,SAAS,EAAE,2BAAhB;AAAA,mBACKT,aAAa,iBACV;AAAG,UAAA,SAAS,EAAE,wBAAd;AAAA,oBAAyCC;AAAzC;AAAA;AAAA;AAAA;AAAA,gBAFR,EAIKH,WAAW,iBACR;AAAG,UAAA,SAAS,EAAE,wBAAd;AAAA,oBAAyCK;AAAzC;AAAA;AAAA;AAAA;AAAA,gBALR;AAAA;AAAA;AAAA;AAAA;AAAA,cATR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH;;GAvCQN,U;UAGiBF,W;;;KAHjBE,U;AAyCT,eAAeA,UAAf","sourcesContent":["import React, { Fragment, useState, useCallback, useMemo } from 'react';\n\n// Components\nimport HeaderColor from '../header-color';\n\n// Hooks\nimport usePrevious from '../../hooks/usePrevious';\n\n// Utils\nimport { COLORS } from '../../utils/colors';\n\n// Styles\nimport './PageLayout.css';\n\nfunction PageLayout() {\n    const [actualColor, setActualColor] = useState(null);\n\n    const previousColor = usePrevious(actualColor);\n\n    const previousSelectedColor = useMemo(() => (\n        `Previous Color: ${previousColor?.toUpperCase()}`\n    ), [previousColor]);\n\n    const actualSelectedColor = useMemo(() => (\n        `Actual Color: ${actualColor?.toUpperCase()}`\n    ), [actualColor]);\n\n    const handleClick = useCallback(color => {\n        setActualColor(color);\n    }, []);\n\n    return (\n        <div className={'page-layout'}>\n            <section className={'page-layout-section'}>\n                <h3>Change Header Color</h3>\n                    <div className={'page-layout-colors-wrapper'}>\n                        { Object.keys(COLORS).map((color, index) =>\n                            <Fragment key={index}>\n                                <HeaderColor onClick={handleClick} color={color} />\n                            </Fragment>\n                        )}\n                    </div>\n                    <div className={'page-layout-color-wrapper'}>\n                        {previousColor && (\n                            <p className={'page-layout-color-info'}>{previousSelectedColor}</p>\n                        )}\n                        {actualColor && (\n                            <p className={'page-layout-color-info'}>{actualSelectedColor}</p>\n                        )}\n                    </div>\n            </section>\n        </div>\n    );\n}\n\nexport default PageLayout;\n"]},"metadata":{},"sourceType":"module"}