{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/brunonabais/Present Technologies/my-app/src/components/header-color/HeaderColor.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHeaderContext } from '../../hooks/HeaderContext';\nimport useMatchingColor from '../../hooks/useMatchingColor';\nimport { COLORS } from '../../utils/colors';\nimport Circle from '../../media/Circle';\nimport './HeaderColor.css';\nimport useColorCounter from '../../hooks/useColorCounter';\n\nfunction HeaderColor({\n  color\n}) {\n  _s();\n\n  const {\n    setHeaderColor\n  } = useHeaderContext();\n  const {\n    setColorCounter,\n    colorCount\n  } = useColorCounter();\n  console.log('header color', colorCount);\n  const matchingColor = useMatchingColor(color);\n  const handleClick = useCallback(() => {\n    setHeaderColor(COLORS[matchingColor]);\n    setColorCounter();\n  }, [matchingColor, setHeaderColor, setColorCounter, color]);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: 'color-button',\n    onClick: handleClick,\n    children: /*#__PURE__*/_jsxDEV(Circle, {\n      fill: COLORS[matchingColor]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(HeaderColor, \"sC8pgjPi2Bi+U7l9MgZpJXsDQhs=\", false, function () {\n  return [useHeaderContext, useColorCounter, useMatchingColor];\n});\n\n_c = HeaderColor;\nHeaderColor.propTypes = {\n  color: PropTypes.string\n};\nexport default HeaderColor;\n\nvar _c;\n\n$RefreshReg$(_c, \"HeaderColor\");","map":{"version":3,"sources":["/Users/brunonabais/Present Technologies/my-app/src/components/header-color/HeaderColor.js"],"names":["React","useCallback","PropTypes","useHeaderContext","useMatchingColor","COLORS","Circle","useColorCounter","HeaderColor","color","setHeaderColor","setColorCounter","colorCount","console","log","matchingColor","handleClick","propTypes","string"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,gBAAT,QAAiC,2BAAjC;AACA,OAAOC,gBAAP,MAA6B,8BAA7B;AAEA,SAAQC,MAAR,QAAqB,oBAArB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AAEA,OAAO,mBAAP;AACA,OAAOC,eAAP,MAA4B,6BAA5B;;AAEA,SAASC,WAAT,CAAqB;AAAEC,EAAAA;AAAF,CAArB,EAAgC;AAAA;;AAC5B,QAAM;AAAEC,IAAAA;AAAF,MAAqBP,gBAAgB,EAA3C;AACA,QAAM;AAAEQ,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,MAAkCL,eAAe,EAAvD;AAEAM,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,UAA5B;AAEA,QAAMG,aAAa,GAAGX,gBAAgB,CAACK,KAAD,CAAtC;AACA,QAAMO,WAAW,GAAGf,WAAW,CAAC,MAAM;AAClCS,IAAAA,cAAc,CAACL,MAAM,CAACU,aAAD,CAAP,CAAd;AACAJ,IAAAA,eAAe;AAElB,GAJ8B,EAI5B,CAACI,aAAD,EAAgBL,cAAhB,EAAgCC,eAAhC,EAAiDF,KAAjD,CAJ4B,CAA/B;AAMA,sBACI;AACI,IAAA,SAAS,EAAE,cADf;AAEI,IAAA,OAAO,EAAEO,WAFb;AAAA,2BAGI,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAEX,MAAM,CAACU,aAAD;AAApB;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GApBQP,W;UACsBL,gB,EACaI,e,EAIlBH,gB;;;KANjBI,W;AAsBTA,WAAW,CAACS,SAAZ,GAAwB;AACpBR,EAAAA,KAAK,EAAEP,SAAS,CAACgB;AADG,CAAxB;AAIA,eAAeV,WAAf","sourcesContent":["import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { useHeaderContext } from '../../hooks/HeaderContext';\nimport useMatchingColor from '../../hooks/useMatchingColor';\n\nimport {COLORS} from '../../utils/colors';\nimport Circle from '../../media/Circle';\n\nimport './HeaderColor.css';\nimport useColorCounter from '../../hooks/useColorCounter';\n\nfunction HeaderColor({ color }) {\n    const { setHeaderColor } = useHeaderContext();\n    const { setColorCounter, colorCount } = useColorCounter();\n\n    console.log('header color', colorCount);\n\n    const matchingColor = useMatchingColor(color);\n    const handleClick = useCallback(() => {\n        setHeaderColor(COLORS[matchingColor]);\n        setColorCounter();\n\n    }, [matchingColor, setHeaderColor, setColorCounter, color]);\n\n    return (\n        <button\n            className={'color-button'}\n            onClick={handleClick}>\n            <Circle fill={COLORS[matchingColor]}/>\n        </button>\n    )\n}\n\nHeaderColor.propTypes = {\n    color: PropTypes.string\n};\n\nexport default HeaderColor;\n"]},"metadata":{},"sourceType":"module"}