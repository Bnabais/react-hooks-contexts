{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/brunonabais/Present Technologies/my-app/src/hooks/HeaderContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useMemo, useState, useCallback, createContext, useContext } from 'react';\nimport { COLORS } from '../utils/colors';\nconst HeaderContext = /*#__PURE__*/createContext();\nexport function HeaderProvider(props) {\n  _s();\n\n  const [headerColorState, setHeaderColorState] = useState(COLORS.grey);\n  const setHeaderColor = useCallback(color => {\n    setHeaderColorState(color);\n  }, []);\n  const value = useMemo(() => ({\n    setHeaderColor,\n    headerColorState\n  }), [setHeaderColor, headerColorState]);\n  return /*#__PURE__*/_jsxDEV(HeaderContext.Provider, {\n    value: value,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 12\n  }, this);\n}\n/**\n * Uses the context provided by the `MiniCartContext`.\n *\n * @returns {HeaderContextValue} - The provided context values.\n */\n\n_s(HeaderProvider, \"D/mqfR775PJFhnaUr8La5w92aac=\");\n\n_c = HeaderProvider;\nexport function useHeaderContext() {\n  _s2();\n\n  return useContext(HeaderContext);\n}\n\n_s2(useHeaderContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport default HeaderContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"HeaderProvider\");","map":{"version":3,"sources":["/Users/brunonabais/Present Technologies/my-app/src/hooks/HeaderContext.js"],"names":["React","useMemo","useState","useCallback","createContext","useContext","COLORS","HeaderContext","HeaderProvider","props","headerColorState","setHeaderColorState","grey","setHeaderColor","color","value","useHeaderContext"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IACIC,OADJ,EAEIC,QAFJ,EAGIC,WAHJ,EAIIC,aAJJ,EAKIC,UALJ,QAMO,OANP;AAOA,SAAQC,MAAR,QAAqB,iBAArB;AAEA,MAAMC,aAAa,gBAAGH,aAAa,EAAnC;AAEA,OAAO,SAASI,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAClC,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CT,QAAQ,CAACI,MAAM,CAACM,IAAR,CAAxD;AAEA,QAAMC,cAAc,GAAGV,WAAW,CAAEW,KAAD,IAAW;AAC1CH,IAAAA,mBAAmB,CAACG,KAAD,CAAnB;AACH,GAFiC,EAE/B,EAF+B,CAAlC;AAIA,QAAMC,KAAK,GAAGd,OAAO,CACjB,OAAO;AACHY,IAAAA,cADG;AAEHH,IAAAA;AAFG,GAAP,CADiB,EAKjB,CAACG,cAAD,EAAiBH,gBAAjB,CALiB,CAArB;AAQA,sBAAO,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAEK,KAA/B;AAAA,OAA0CN;AAA1C;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;AAED;AACA;AACA;AACA;AACA;;GAtBgBD,c;;KAAAA,c;AAuBhB,OAAO,SAASQ,gBAAT,GAA4B;AAAA;;AAC/B,SAAOX,UAAU,CAACE,aAAD,CAAjB;AACH;;IAFeS,gB;;AAIhB,eAAeT,aAAf","sourcesContent":["import React, {\n    useMemo,\n    useState,\n    useCallback,\n    createContext,\n    useContext\n} from 'react';\nimport {COLORS} from '../utils/colors';\n\nconst HeaderContext = createContext();\n\nexport function HeaderProvider(props) {\n    const [headerColorState, setHeaderColorState] = useState(COLORS.grey);\n\n    const setHeaderColor = useCallback((color) => {\n        setHeaderColorState(color);\n    }, []);\n\n    const value = useMemo(\n        () => ({\n            setHeaderColor,\n            headerColorState\n        }),\n        [setHeaderColor, headerColorState]\n    );\n\n    return <HeaderContext.Provider value={value} {...props} />;\n}\n\n/**\n * Uses the context provided by the `MiniCartContext`.\n *\n * @returns {HeaderContextValue} - The provided context values.\n */\nexport function useHeaderContext() {\n    return useContext(HeaderContext);\n}\n\nexport default HeaderContext;\n"]},"metadata":{},"sourceType":"module"}